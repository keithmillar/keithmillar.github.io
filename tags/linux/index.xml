<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Keith&#39;s Diary and Other Stuff</title>
    <link>https://keithmillar.github.io/tags/linux/</link>
    <description>Recent content in Linux on Keith&#39;s Diary and Other Stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 Jul 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://keithmillar.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remove Spaces in File Names</title>
      <link>https://keithmillar.github.io/2012-07-22-remove-spaces-in-file-names/</link>
      <pubDate>Sun, 22 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-07-22-remove-spaces-in-file-names/</guid>
      <description>Removes spaces in file names and replaces them with
{% highlight bash html %} for file in ; do mv &amp;ldquo;$file&amp;rdquo; echo $file | sed -e &#39;s/ */-/g&#39; -e &#39;s/_-_/-/g&#39;; done {% endhighlight %} or {% highlight bash html %} find . -depth -name &amp;lsquo; *&amp;rsquo; | while IFS= read -r f ; do mv -i &amp;ldquo;$f&amp;rdquo; &amp;ldquo;$(dirname &amp;ldquo;$f&amp;rdquo;)/$(basename &amp;ldquo;$f&amp;rdquo;|tr &amp;lsquo; &amp;rsquo; _)&amp;rdquo; ; done {% endhighlight %}</description>
    </item>
    
    <item>
      <title>The X server will not be able to send the VDPAU driver name to libvdpau</title>
      <link>https://keithmillar.github.io/2012-06-15-nvidia-vdpau/</link>
      <pubDate>Fri, 15 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-06-15-nvidia-vdpau/</guid>
      <description>AFAIK that is because the dri and dri2 modules from xorg-x11(mesa) opengl setup are not in path. I worked around this by
{% highlight bash html linenos %} Quote: Section &amp;ldquo;Files&amp;rdquo; ModulePath &amp;ldquo;/usr/lib/xorg/modules&amp;rdquo; ModulePath &amp;ldquo;/usr/lib/opengl/xorg-x11/extensions/&amp;rdquo; &amp;hellip; EndSection {% endhighlight %}</description>
    </item>
    
    <item>
      <title>Reloading the Mutt Configuration File</title>
      <link>https://keithmillar.github.io/2012-06-11-reloading-the-mutt-configuration-file/</link>
      <pubDate>Mon, 11 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-06-11-reloading-the-mutt-configuration-file/</guid>
      <description>I find it a bit annoying that I have to re-enter my password twice every time I (re-)start mutt when I want to update my configuration file. Well, it appears I don&amp;rsquo;t need to be doing restarting mutt. The MuttWiki describes a way to re-load the configuration after mutt is running. Type the following into mutt after you&amp;rsquo;ve changed your muttrc file:  :source /path/to/your/muttrc Note that shell expansions may not work&amp;mdash;you should spell out the full path.</description>
    </item>
    
    <item>
      <title>Portable Emacs </title>
      <link>https://keithmillar.github.io/2012-03-08-portable-emacs/</link>
      <pubDate>Thu, 08 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-03-08-portable-emacs/</guid>
      <description>While reading gmane.emacs.help I came accross this post where somebody asked how he could make a portable app out of Emacs&amp;rsquo; Windows version.
So since I&amp;rsquo;m still at my internship (where they use Windows) and just recently obtained an iAudio X5L portable media player which behaves like an USB2 harddisk to the OS I wondered if I could manage to make Emacs portable.
Short version: I could, the &amp;ldquo;hardest&amp;rdquo; part was in fact not even Emacs related, but my sheer lack of knowledge about Windows batch script.</description>
    </item>
    
    <item>
      <title>Print From Mutt</title>
      <link>https://keithmillar.github.io/2012-02-22-print-from-mutt/</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-02-22-print-from-mutt/</guid>
      <description>To print from Mutt install enscript and add the following lines to muttrc
{% highlight bash %} set print=&amp;ldquo;yes&amp;rdquo; set print_split set print_command=&amp;ldquo;enscript &amp;ndash;portrait &amp;ndash;header=&amp;lsquo;%n@%M:%d|%F %C|Page ($%/$=)&amp;rsquo; &amp;ndash;media=A4 &amp;ndash;silent &amp;ndash;encoding=88591 &amp;ndash;pretty-print=mail &amp;ndash;printer=HP-Deskjet-USB&amp;rdquo; set print_decode {% endhighlight %}</description>
    </item>
    
    <item>
      <title>To use emacs as the mail editor with mutt</title>
      <link>https://keithmillar.github.io/2012-02-22-emacs-as-the-mail-editor-with-mutt/</link>
      <pubDate>Wed, 22 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-02-22-emacs-as-the-mail-editor-with-mutt/</guid>
      <description>Add the following line to your muttrc file: {% highlight bash %} set editor = &amp;ldquo;/usr/bin/emacs -nw %s&amp;rdquo; {% endhighlight %}
Add the following line to your .emacs file: {% highlight bash %} (load &amp;ldquo;~/post.el&amp;rdquo;) {% endhighlight %}</description>
    </item>
    
    <item>
      <title>Emacs Day (All Day)</title>
      <link>https://keithmillar.github.io/2012-01-30-emacs-day-all-day/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-01-30-emacs-day-all-day/</guid>
      <description>Started to get a feel for emacs to day, and it did take nearly all day. Finding information is not a problem finding current and relevant info can be a real challenge. How ever I did get the colour theme working and formatted the date in the calendar for European formatting. I even added the Moto GP and World Super Bike dates. Now all I have to do is put it all all together and start org mode.</description>
    </item>
    
    <item>
      <title>Cron Info</title>
      <link>https://keithmillar.github.io/2012-01-20-cron-info/</link>
      <pubDate>Fri, 20 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-01-20-cron-info/</guid>
      <description>{% highlight bash html linenos %}
Minute Hour Day of Month Month Day of Week Command (0-59) (0-23) (1-31) (1-12 or Jan-Dec) (0-6 or Sun-Sat) 0 2 12 * 0,6 /usr/bin/find  {% endhighlight %}</description>
    </item>
    
    <item>
      <title>Kernel Upgrade</title>
      <link>https://keithmillar.github.io/2012-01-18-kernel-upgrade/</link>
      <pubDate>Wed, 18 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://keithmillar.github.io/2012-01-18-kernel-upgrade/</guid>
      <description>emerge -P gentoo-sources to remove oldest kernel before installing latest kernel
In most cases, temporary files used during compilation will still remain under the appropriate source directory under /usr/src. It is safe to remove these using rm.
You can also safely delete any modules that were used by this kernel. This can be done by removing the appropriate directories under /lib/modules/ that relate to the kernel versions you are removing. Be careful not to delete modules belonging to kernels that you still use!</description>
    </item>
    
  </channel>
</rss>